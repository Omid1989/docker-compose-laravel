version: '3'

networks:
  laravel:

services:
  site:
    build:
      context: .

      dockerfile: nginx.dockerfile
    container_name: nginx
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}
    depends_on:
      - php
      - mysql
      - redis
      - phpmyadmin
    networks:
      - laravel

  mysql:
    image: mysql:${DB_VERSION}
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "${DB_PORT}:3306"
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_MYSQL_USER}
      MYSQL_PASSWORD: ${DB_MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}
    ports:
      - "9000:9000"
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: composer
    volumes:
      - ${APP_PATH}:/var/www/html 
    working_dir: /var/www/html  
    depends_on:
      - php
    user: laravel
    networks:
      - laravel
    entrypoint: ['composer', '--ignore-platform-reqs']

  npm:
    image: node:${NPM_VERSION}
    container_name: npm
    volumes:
      - ${APP_PATH}:/var/www/html  
    working_dir: /var/www/html 
    entrypoint: ['npm']
    networks:
       - laravel

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}  
    depends_on:
      - mysql
    working_dir: /var/www/html 
    user: laravel
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  redis:
    container_name: redis
    image: redis:${REDIS_VERSION}
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - laravel

  phpmyadmin:
     depends_on:
       - mysql
     image: phpmyadmin/phpmyadmin
     container_name: phpmyadmin
     restart: always
     ports:
       - '${PHPMYADMIN_PORT}:80'
     environment:
        PMA_HOST: mysql
     networks:
       - laravel
